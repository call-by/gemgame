/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GemGiveaway, GemGiveawayInterface } from "../GemGiveaway";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "firstWeeklyGiveawayStart",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "chooseRandomPairs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "claimRewardForDiamond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "contract IERC721Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUniqueIds",
    outputs: [
      {
        internalType: "uint256[330]",
        name: "",
        type: "uint256[330]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "giveawayStartTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pairs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
    ],
    name: "setCollectionAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_giveawayStartTimestamp",
        type: "uint256",
      },
    ],
    name: "setGiveawayStartTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "winners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161130238038061130283398101604081905261002f916100a5565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060018055600280546001600160a01b0319166001600160a01b03939093169290921790915561014f5561014a61014e556100df565b600080604083850312156100b857600080fd5b82516001600160a01b03811681146100cf57600080fd5b6020939093015192949293505050565b611214806100ee6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a6904aa511610097578063dbe7e3bd11610066578063dbe7e3bd146101df578063f0cc51d414610202578063f2fde38b14610217578063f3fef3a31461022a57600080fd5b8063a6904aa5146101a7578063b91ac788146101ba578063cb9cdd74146101cd578063d03cfab3146101d757600080fd5b8063715018a6116100d3578063715018a6146101505780637de1e536146101585780638da5cb5b14610183578063a2fb11751461019457600080fd5b806309a69f5714610105578063403a5674146101205780634b35665c146101355780634e71d92d14610148575b600080fd5b61010d61023d565b6040519081526020015b60405180910390f35b61013361012e366004610fc1565b610278565b005b610133610143366004610fc1565b6102a8565b6101336104ad565b6101336107f8565b60025461016b906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b6000546001600160a01b031661016b565b61016b6101a2366004610fc1565b61086c565b6101336101b5366004610ff2565b61088d565b61010d6101c8366004610fc1565b6108d9565b61010d61014f5481565b6101336108fb565b6101f26101ed366004610fc1565b6109d6565b6040519015158152602001610117565b61020a610a01565b6040516101179190611016565b610133610225366004610ff2565b610a68565b610133610238366004611049565b610b52565b600080546001600160a01b031633146102715760405162461bcd60e51b815260040161026890611075565b60405180910390fd5b5060035490565b6000546001600160a01b031633146102a25760405162461bcd60e51b815260040161026890611075565b61014f55565b600260015414156102fb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610268565b60026001556119c8811080159061039457506002546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e9060240160206040518083038186803b15801561035157600080fd5b505afa158015610365573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038991906110aa565b6001600160a01b0316145b6103d75760405162461bcd60e51b815260206004820152601460248201527314da1bdd5b19081bdddb881848191a585b5bdb9960621b6044820152606401610268565b600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561041d57600080fd5b505af1158015610431573d6000803e3d6000fd5b505060405160009250339150674563918244f40000908381818185875af1925050503d806000811461047f576040519150601f19603f3d011682016040523d82523d6000602084013e610484565b606091505b50509050806104a55760405162461bcd60e51b8152600401610268906110c7565b505060018055565b600260015414156105005760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610268565b600260015560005b602881101561058157336101518260288110610526576105266110f4565b01546001600160a01b03161480156105655750610179816028811061054d5761054d6110f4565b602081049091015460ff601f9092166101000a900416155b1561056f57610581565b8061057981611120565b915050610508565b602881106105d15760405162461bcd60e51b815260206004820152601860248201527f4e6f742077696e6e657220666f722074686973207765656b00000000000000006044820152606401610268565b60006105de601483611151565b6101506105ec601485611165565b815481106105fc576105fc6110f4565b906000526020600020015460146106139190611179565b61061d9190611198565b6002546040516331a9108f60e11b81526004810183905291925033916001600160a01b0390911690636352211e9060240160206040518083038186803b15801561066657600080fd5b505afa15801561067a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069e91906110aa565b6001600160a01b0316146106e65760405162461bcd60e51b815260206004820152600f60248201526e4f776e65727368697020697373756560881b6044820152606401610268565b600161017983602881106106fc576106fc6110f4565b602081049091018054921515601f9092166101000a91820260ff90920219909216179055600254604051630852cd8d60e31b81526001600160a01b03909116906342966c689061075490849060040190815260200190565b600060405180830381600087803b15801561076e57600080fd5b505af1158015610782573d6000803e3d6000fd5b5050600354604051600093503392508381818185875af1925050503d80600081146107c9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ce565b606091505b50509050806107ef5760405162461bcd60e51b8152600401610268906110c7565b50506001805550565b6000546001600160a01b031633146108225760405162461bcd60e51b815260040161026890611075565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610151816028811061087d57600080fd5b01546001600160a01b0316905081565b6000546001600160a01b031633146108b75760405162461bcd60e51b815260040161026890611075565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61015081815481106108ea57600080fd5b600091825260209091200154905081565b6000546001600160a01b031633146109255760405162461bcd60e51b815260040161026890611075565b4261014f5410801561093b5750600261014e5410155b6109875760405162461bcd60e51b815260206004820152601f60248201527f5765656b6c79206769766561776179206e6f74207374617274656420796574006044820152606401610268565b62093a8061014f600082825461099d9190611198565b90915550602890506109b76729a2241af62c0000476111b0565b6109c19190611165565b6003556109cc610bf4565b6109d4610bf4565b565b61017981602881106109e757600080fd5b60209182820401919006915054906101000a900460ff1681565b610a09610fa1565b6000546001600160a01b03163314610a335760405162461bcd60e51b815260040161026890611075565b604080516129408101918290529060049061014a9082845b815481526020019060010190808311610a4b575050505050905090565b6000546001600160a01b03163314610a925760405162461bcd60e51b815260040161026890611075565b6001600160a01b038116610af75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610268565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610b7c5760405162461bcd60e51b815260040161026890611075565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610bc9576040519150601f19603f3d011682016040523d82523d6000602084013e610bce565b606091505b5050905080610bef5760405162461bcd60e51b8152600401610268906110c7565b505050565b61014e546003546040805144602082015242918101919091526060810191909152608081018290526000919060a0016040516020818303038152906040528051906020012060001c610c469190611151565b90506000610c5382610f58565b9050610c6d600161014e54610c6891906111b0565b610f58565b60048361014a8110610c8157610c816110f4565b015561014e8054906000610c94836111c7565b909155506101509050610ca86001836111b0565b8154600181018355600092835260209092209091015561015054610cce90600290611151565b610f545760005b6014811015610bef5760025461015080546001600160a01b0390921691636352211e918491610d06906001906111b0565b81548110610d1657610d166110f4565b90600052602060002001546014610d2d9190611179565b610d379190611198565b6040518263ffffffff1660e01b8152600401610d5591815260200190565b60206040518083038186803b158015610d6d57600080fd5b505afa158015610d81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da591906110aa565b6101518260288110610db957610db96110f4565b0180546001600160a01b0319166001600160a01b039283161790556002805461015080549190931692636352211e928592610df491906111b0565b81548110610e0457610e046110f4565b90600052602060002001546014610e1b9190611179565b610e259190611198565b6040518263ffffffff1660e01b8152600401610e4391815260200190565b60206040518083038186803b158015610e5b57600080fd5b505afa158015610e6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9391906110aa565b610151610ea1836014611198565b60288110610eb157610eb16110f4565b0180546001600160a01b0319166001600160a01b03929092169190911790556000610179610ee0836014611198565b60288110610ef057610ef06110f4565b602091828204019190066101000a81548160ff02191690831515021790556101798260288110610f2257610f226110f4565b602091828204019190066101000a81548160ff0219169083151502179055508080610f4c90611120565b915050610cd5565b5050565b600060048261014a8110610f6e57610f6e6110f4565b015415610f905760048261014a8110610f8957610f896110f4565b0154610f9b565b610f9b826001611198565b92915050565b60405180612940016040528061014a906020820280368337509192915050565b600060208284031215610fd357600080fd5b5035919050565b6001600160a01b0381168114610fef57600080fd5b50565b60006020828403121561100457600080fd5b813561100f81610fda565b9392505050565b6129408101818360005b61014a811015611040578151835260209283019290910190600101611020565b50505092915050565b6000806040838503121561105c57600080fd5b823561106781610fda565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156110bc57600080fd5b815161100f81610fda565b60208082526013908201527208cc2d2d8cac840e8de40e6cadcc84082ac82b606b1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156111345761113461110a565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111605761116061113b565b500690565b6000826111745761117461113b565b500490565b60008160001904831182151516156111935761119361110a565b500290565b600082198211156111ab576111ab61110a565b500190565b6000828210156111c2576111c261110a565b500390565b6000816111d6576111d661110a565b50600019019056fea264697066735822122019c84f9cf40cb1a42df2480021ef30a6557692c7f0e908a4395bd99d3c6491f364736f6c63430008090033";

export class GemGiveaway__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _collection: string,
    firstWeeklyGiveawayStart: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GemGiveaway> {
    return super.deploy(
      _collection,
      firstWeeklyGiveawayStart,
      overrides || {}
    ) as Promise<GemGiveaway>;
  }
  getDeployTransaction(
    _collection: string,
    firstWeeklyGiveawayStart: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _collection,
      firstWeeklyGiveawayStart,
      overrides || {}
    );
  }
  attach(address: string): GemGiveaway {
    return super.attach(address) as GemGiveaway;
  }
  connect(signer: Signer): GemGiveaway__factory {
    return super.connect(signer) as GemGiveaway__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GemGiveawayInterface {
    return new utils.Interface(_abi) as GemGiveawayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GemGiveaway {
    return new Contract(address, _abi, signerOrProvider) as GemGiveaway;
  }
}
