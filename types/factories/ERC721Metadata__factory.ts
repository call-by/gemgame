/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721Metadata,
  ERC721MetadataInterface,
} from "../ERC721Metadata";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f6a38038062001f6a83398101604081905262000034916200025c565b8251839083906200004d906000906020850190620000e9565b50805162000063906001906020840190620000e9565b505050600062000078620000e560201b60201c565b600a80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508051620000db90600b906020840190620000e9565b505050506200032a565b3390565b828054620000f790620002ed565b90600052602060002090601f0160209004810192826200011b576000855562000166565b82601f106200013657805160ff191683800117855562000166565b8280016001018555821562000166579182015b828111156200016657825182559160200191906001019062000149565b506200017492915062000178565b5090565b5b8082111562000174576000815560010162000179565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001b757600080fd5b81516001600160401b0380821115620001d457620001d46200018f565b604051601f8301601f19908116603f01168101908282118183101715620001ff57620001ff6200018f565b816040528381526020925086838588010111156200021c57600080fd5b600091505b8382101562000240578582018301518183018401529082019062000221565b83821115620002525760008385830101525b9695505050505050565b6000806000606084860312156200027257600080fd5b83516001600160401b03808211156200028a57600080fd5b6200029887838801620001a5565b94506020860151915080821115620002af57600080fd5b620002bd87838801620001a5565b93506040860151915080821115620002d457600080fd5b50620002e386828701620001a5565b9150509250925092565b600181811c908216806200030257607f821691505b602082108114156200032457634e487b7160e01b600052602260045260246000fd5b50919050565b611c30806200033a6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806355f804b3116100b857806395d89b411161007c57806395d89b411461027c578063a22cb46514610284578063b88d4fde14610297578063c87b56dd146102aa578063e985e9c5146102bd578063f2fde38b146102f957600080fd5b806355f804b31461022a5780636352211e1461023d57806370a0823114610250578063715018a6146102635780638da5cb5b1461026b57600080fd5b806323b872dd116100ff57806323b872dd146101cb5780632f745c59146101de57806342842e0e146101f157806342966c68146102045780634f6ccce71461021757600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806318160ddd146101b9575b600080fd5b61014f61014a3660046115c7565b61030c565b60405190151581526020015b60405180910390f35b61016c610337565b60405161015b9190611643565b61018c610187366004611656565b6103c9565b6040516001600160a01b03909116815260200161015b565b6101b76101b236600461168b565b610463565b005b6008545b60405190815260200161015b565b6101b76101d93660046116b5565b610579565b6101bd6101ec36600461168b565b6105ab565b6101b76101ff3660046116b5565b610641565b6101b7610212366004611656565b61065c565b6101bd610225366004611656565b6106d6565b6101b761023836600461177d565b610769565b61018c61024b366004611656565b610847565b6101bd61025e3660046117c6565b6108be565b6101b7610945565b600a546001600160a01b031661018c565b61016c6109b9565b6101b76102923660046117e1565b6109c8565b6101b76102a536600461181d565b610a8d565b61016c6102b8366004611656565b610ac5565b61014f6102cb366004611899565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101b76103073660046117c6565b610ba0565b60006001600160e01b0319821663780e9d6360e01b1480610331575061033182610c8b565b92915050565b606060008054610346906118cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610372906118cc565b80156103bf5780601f10610394576101008083540402835291602001916103bf565b820191906000526020600020905b8154815290600101906020018083116103a257829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104475760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061046e82610847565b9050806001600160a01b0316836001600160a01b031614156104dc5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161043e565b336001600160a01b03821614806104f857506104f881336102cb565b61056a5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161043e565b6105748383610cdb565b505050565b610584335b82610d49565b6105a05760405162461bcd60e51b815260040161043e90611907565b610574838383610e40565b60006105b6836108be565b82106106185760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161043e565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61057483838360405180602001604052806000815250610a8d565b6106653361057e565b6106ca5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b606482015260840161043e565b6106d381610feb565b50565b60006106e160085490565b82106107445760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161043e565b6008828154811061075757610757611958565b90600052602060002001549050919050565b600a546001600160a01b031633146107935760405162461bcd60e51b815260040161043e9061196e565b806040516020016107a491906119a3565b60405160208183030381529060405280519060200120600b6040516020016107cc9190611a59565b6040516020818303038152906040528051906020012014156108305760405162461bcd60e51b815260206004820152601f60248201527f4552433732314d657461646174613a2065786973746564206261736555524900604482015260640161043e565b805161084390600b906020840190611518565b5050565b6000818152600260205260408120546001600160a01b0316806103315760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161043e565b60006001600160a01b0382166109295760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161043e565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b0316331461096f5760405162461bcd60e51b815260040161043e9061196e565b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b606060018054610346906118cc565b6001600160a01b038216331415610a215760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161043e565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610a973383610d49565b610ab35760405162461bcd60e51b815260040161043e90611907565b610abf84848484611092565b50505050565b6000818152600260205260409020546060906001600160a01b0316610b445760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161043e565b6000600b8054610b53906118cc565b905011610b6f5760405180602001604052806000815250610331565b600b610b7a836110c5565b604051602001610b8b929190611a65565b60405160208183030381529060405292915050565b600a546001600160a01b03163314610bca5760405162461bcd60e51b815260040161043e9061196e565b6001600160a01b038116610c2f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161043e565b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b031982166380ac58cd60e01b1480610cbc57506001600160e01b03198216635b5e139f60e01b145b8061033157506301ffc9a760e01b6001600160e01b0319831614610331565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d1082610847565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610dc25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161043e565b6000610dcd83610847565b9050806001600160a01b0316846001600160a01b03161480610e085750836001600160a01b0316610dfd846103c9565b6001600160a01b0316145b80610e3857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610e5382610847565b6001600160a01b031614610ebb5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161043e565b6001600160a01b038216610f1d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161043e565b610f288383836111c3565b610f33600082610cdb565b6001600160a01b0383166000908152600360205260408120805460019290610f5c908490611ab0565b90915550506001600160a01b0382166000908152600360205260408120805460019290610f8a908490611ac7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610ff682610847565b9050611004816000846111c3565b61100f600083610cdb565b6001600160a01b0381166000908152600360205260408120805460019290611038908490611ab0565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b61109d848484610e40565b6110a98484848461127b565b610abf5760405162461bcd60e51b815260040161043e90611adf565b6060816110e95750506040805180820190915260018152600360fc1b602082015290565b8160005b811561111357806110fd81611b31565b915061110c9050600a83611b62565b91506110ed565b60008167ffffffffffffffff81111561112e5761112e6116f1565b6040519080825280601f01601f191660200182016040528015611158576020820181803683370190505b5090505b8415610e385761116d600183611ab0565b915061117a600a86611b76565b611185906030611ac7565b60f81b81838151811061119a5761119a611958565b60200101906001600160f81b031916908160001a9053506111bc600a86611b62565b945061115c565b6001600160a01b03831661121e5761121981600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611241565b816001600160a01b0316836001600160a01b031614611241576112418382611388565b6001600160a01b0382166112585761057481611425565b826001600160a01b0316826001600160a01b0316146105745761057482826114d4565b60006001600160a01b0384163b1561137d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112bf903390899088908890600401611b8a565b602060405180830381600087803b1580156112d957600080fd5b505af1925050508015611309575060408051601f3d908101601f1916820190925261130691810190611bc7565b60015b611363573d808015611337576040519150601f19603f3d011682016040523d82523d6000602084013e61133c565b606091505b50805161135b5760405162461bcd60e51b815260040161043e90611adf565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e38565b506001949350505050565b60006001611395846108be565b61139f9190611ab0565b6000838152600760205260409020549091508082146113f2576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061143790600190611ab0565b6000838152600960205260408120546008805493945090928490811061145f5761145f611958565b90600052602060002001549050806008838154811061148057611480611958565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806114b8576114b8611be4565b6001900381819060005260206000200160009055905550505050565b60006114df836108be565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054611524906118cc565b90600052602060002090601f016020900481019282611546576000855561158c565b82601f1061155f57805160ff191683800117855561158c565b8280016001018555821561158c579182015b8281111561158c578251825591602001919060010190611571565b5061159892915061159c565b5090565b5b80821115611598576000815560010161159d565b6001600160e01b0319811681146106d357600080fd5b6000602082840312156115d957600080fd5b81356115e4816115b1565b9392505050565b60005b838110156116065781810151838201526020016115ee565b83811115610abf5750506000910152565b6000815180845261162f8160208601602086016115eb565b601f01601f19169290920160200192915050565b6020815260006115e46020830184611617565b60006020828403121561166857600080fd5b5035919050565b80356001600160a01b038116811461168657600080fd5b919050565b6000806040838503121561169e57600080fd5b6116a78361166f565b946020939093013593505050565b6000806000606084860312156116ca57600080fd5b6116d38461166f565b92506116e16020850161166f565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611722576117226116f1565b604051601f8501601f19908116603f0116810190828211818310171561174a5761174a6116f1565b8160405280935085815286868601111561176357600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561178f57600080fd5b813567ffffffffffffffff8111156117a657600080fd5b8201601f810184136117b757600080fd5b610e3884823560208401611707565b6000602082840312156117d857600080fd5b6115e48261166f565b600080604083850312156117f457600080fd5b6117fd8361166f565b91506020830135801515811461181257600080fd5b809150509250929050565b6000806000806080858703121561183357600080fd5b61183c8561166f565b935061184a6020860161166f565b925060408501359150606085013567ffffffffffffffff81111561186d57600080fd5b8501601f8101871361187e57600080fd5b61188d87823560208401611707565b91505092959194509250565b600080604083850312156118ac57600080fd5b6118b58361166f565b91506118c36020840161166f565b90509250929050565b600181811c908216806118e057607f821691505b6020821081141561190157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082516119b58184602087016115eb565b9190910192915050565b8054600090600181811c90808316806119d957607f831692505b60208084108214156119fb57634e487b7160e01b600052602260045260246000fd5b818015611a0f5760018114611a2057611a4d565b60ff19861689528489019650611a4d565b60008881526020902060005b86811015611a455781548b820152908501908301611a2c565b505084890196505b50505050505092915050565b60006115e482846119bf565b6000611a7182856119bf565b8351611a818183602088016115eb565b64173539b7b760d91b9101908152600501949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611ac257611ac2611a9a565b500390565b60008219821115611ada57611ada611a9a565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415611b4557611b45611a9a565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611b7157611b71611b4c565b500490565b600082611b8557611b85611b4c565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611bbd90830184611617565b9695505050505050565b600060208284031215611bd957600080fd5b81516115e4816115b1565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220310961efc1384071174aec31820b98ba28ab9e0f9fd5083eee59d7442ce8071064736f6c63430008090033";

export class ERC721Metadata__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    baseURI_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Metadata> {
    return super.deploy(
      name_,
      symbol_,
      baseURI_,
      overrides || {}
    ) as Promise<ERC721Metadata>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    baseURI_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      baseURI_,
      overrides || {}
    );
  }
  attach(address: string): ERC721Metadata {
    return super.attach(address) as ERC721Metadata;
  }
  connect(signer: Signer): ERC721Metadata__factory {
    return super.connect(signer) as ERC721Metadata__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MetadataInterface {
    return new utils.Interface(_abi) as ERC721MetadataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Metadata {
    return new Contract(address, _abi, signerOrProvider) as ERC721Metadata;
  }
}
